// SpkTower.inc
//
// Generated by: Henry Wagner (henrywagner@henrywagner.org)

#declare Speaker_Tower = union {
   cylinder {
      < -4, 0, -4 >,
      < -4, 0,  4 >,
      0.4
   }
   cylinder {
      < 4, 0, -4 >,
      < 4, 0,  4 >,
      0.4
   }
   cylinder {
      < -4, 0, -4 >,
      <  4, 0, -4 >,
      0.4
   }
   cylinder {
      < -4, 0, 4 >,
      <  4, 0, 4 >,
      0.4
   }
   cylinder {
      < -4, 0,  4 >,
      <  4, 0, -4 >,
      0.4
   }
   cylinder {
      < -4, 0, -4 >,
      <  4, 0,  4 >,
      0.4
   }
   sphere {
      < -4, 0, -4 >,
      0.4
   }
   sphere {
      < -4, 0, 4 >,
      0.4
   }
   sphere {
      < 4, 0, -4 >,
      0.4
   }
   sphere {
      < 4, 0, 4 >,
      0.4
   }
   cylinder {
      < -2, 0, -2 >,
      < -2, 80, -2 >,
      0.4
   }
   cylinder {
      < -2, 0, 2 >,
      < -2, 80, 2 >,
      0.4
   }
   cylinder {
      < 2, 0, -2 >,
      < 2, 80, -2 >,
      0.4
   }
   cylinder {
      < 2, 0, 2 >,
      < 2, 80, 2 >,
      0.4
   }
   cylinder {
      < -2, 0, -2 >,
      < -2, 0, 2 >,
      0.35
   }
   cylinder {
      <  2, 0, -2 >,
      <  2, 0, 2 >,
      0.35
   }
   cylinder {
      < -2, 0, 2 >,
      <  2, 0, 2 >,
      0.35
   }
   cylinder {
      < -2, 0, -2 >,
      <  2, 0, -2 >,
      0.35
   }
   cylinder {
      < -2, 0, -2 >,
      < -2, 4, 2 >,
      0.2
   }
   cylinder {
      < 2, 0, -2 >,
      < 2, 4, 2 >,
      0.2
   }
   cylinder {
      < -2, 4, -2 >,
      <  2, 0, -2 >,
      0.2
   }
   cylinder {
      < -2, 4, 2 >,
      <  2, 0, 2 >,
      0.2
   }
   cylinder {
      < -2, 4, -2 >,
      < -2, 4, 2 >,
      0.35
   }
   cylinder {
      <  2, 4, -2 >,
      <  2, 4, 2 >,
      0.35
   }
   cylinder {
      < -2, 4, 2 >,
      <  2, 4, 2 >,
      0.35
   }
   cylinder {
      < -2, 4, -2 >,
      <  2, 4, -2 >,
      0.35
   }
   cylinder {
      < -2, 4, -2 >,
      < -2, 8, 2 >,
      0.2
   }
   cylinder {
      < 2, 4, -2 >,
      < 2, 8, 2 >,
      0.2
   }
   cylinder {
      < -2, 8, -2 >,
      <  2, 4, -2 >,
      0.2
   }
   cylinder {
      < -2, 8, 2 >,
      <  2, 4, 2 >,
      0.2
   }
   cylinder {
      < -2, 8, -2 >,
      < -2, 8, 2 >,
      0.35
   }
   cylinder {
      <  2, 8, -2 >,
      <  2, 8, 2 >,
      0.35
   }
   cylinder {
      < -2, 8, 2 >,
      <  2, 8, 2 >,
      0.35
   }
   cylinder {
      < -2, 8, -2 >,
      <  2, 8, -2 >,
      0.35
   }
   cylinder {
      < -2, 8, -2 >,
      < -2, 12, 2 >,
      0.2
   }
   cylinder {
      < 2, 8, -2 >,
      < 2, 12, 2 >,
      0.2
   }
   cylinder {
      < -2, 12, -2 >,
      <  2, 8, -2 >,
      0.2
   }
   cylinder {
      < -2, 12, 2 >,
      <  2, 8, 2 >,
      0.2
   }
   cylinder {
      < -2, 12, -2 >,
      < -2, 12, 2 >,
      0.35
   }
   cylinder {
      <  2, 12, -2 >,
      <  2, 12, 2 >,
      0.35
   }
   cylinder {
      < -2, 12, 2 >,
      <  2, 12, 2 >,
      0.35
   }
   cylinder {
      < -2, 12, -2 >,
      <  2, 12, -2 >,
      0.35
   }
   cylinder {
      < -2, 12, -2 >,
      < -2, 16, 2 >,
      0.2
   }
   cylinder {
      < 2, 12, -2 >,
      < 2, 16, 2 >,
      0.2
   }
   cylinder {
      < -2, 16, -2 >,
      <  2, 12, -2 >,
      0.2
   }
   cylinder {
      < -2, 16, 2 >,
      <  2, 12, 2 >,
      0.2
   }
   cylinder {
      < -2, 16, -2 >,
      < -2, 16, 2 >,
      0.35
   }
   cylinder {
      <  2, 16, -2 >,
      <  2, 16, 2 >,
      0.35
   }
   cylinder {
      < -2, 16, 2 >,
      <  2, 16, 2 >,
      0.35
   }
   cylinder {
      < -2, 16, -2 >,
      <  2, 16, -2 >,
      0.35
   }
   cylinder {
      < -2, 16, -2 >,
      < -2, 20, 2 >,
      0.2
   }
   cylinder {
      < 2, 16, -2 >,
      < 2, 20, 2 >,
      0.2
   }
   cylinder {
      < -2, 20, -2 >,
      <  2, 16, -2 >,
      0.2
   }
   cylinder {
      < -2, 20, 2 >,
      <  2, 16, 2 >,
      0.2
   }
   cylinder {
      < -2, 20, -2 >,
      < -2, 20, 2 >,
      0.35
   }
   cylinder {
      <  2, 20, -2 >,
      <  2, 20, 2 >,
      0.35
   }
   cylinder {
      < -2, 20, 2 >,
      <  2, 20, 2 >,
      0.35
   }
   cylinder {
      < -2, 20, -2 >,
      <  2, 20, -2 >,
      0.35
   }
   cylinder {
      < -2, 20, -2 >,
      < -2, 24, 2 >,
      0.2
   }
   cylinder {
      < 2, 20, -2 >,
      < 2, 24, 2 >,
      0.2
   }
   cylinder {
      < -2, 24, -2 >,
      <  2, 20, -2 >,
      0.2
   }
   cylinder {
      < -2, 24, 2 >,
      <  2, 20, 2 >,
      0.2
   }
   cylinder {
      < -2, 24, -2 >,
      < -2, 24, 2 >,
      0.35
   }
   cylinder {
      <  2, 24, -2 >,
      <  2, 24, 2 >,
      0.35
   }
   cylinder {
      < -2, 24, 2 >,
      <  2, 24, 2 >,
      0.35
   }
   cylinder {
      < -2, 24, -2 >,
      <  2, 24, -2 >,
      0.35
   }
   cylinder {
      < -2, 24, -2 >,
      < -2, 28, 2 >,
      0.2
   }
   cylinder {
      < 2, 24, -2 >,
      < 2, 28, 2 >,
      0.2
   }
   cylinder {
      < -2, 28, -2 >,
      <  2, 24, -2 >,
      0.2
   }
   cylinder {
      < -2, 28, 2 >,
      <  2, 24, 2 >,
      0.2
   }
   cylinder {
      < -2, 28, -2 >,
      < -2, 28, 2 >,
      0.35
   }
   cylinder {
      <  2, 28, -2 >,
      <  2, 28, 2 >,
      0.35
   }
   cylinder {
      < -2, 28, 2 >,
      <  2, 28, 2 >,
      0.35
   }
   cylinder {
      < -2, 28, -2 >,
      <  2, 28, -2 >,
      0.35
   }
   cylinder {
      < -2, 28, -2 >,
      < -2, 32, 2 >,
      0.2
   }
   cylinder {
      < 2, 28, -2 >,
      < 2, 32, 2 >,
      0.2
   }
   cylinder {
      < -2, 32, -2 >,
      <  2, 28, -2 >,
      0.2
   }
   cylinder {
      < -2, 32, 2 >,
      <  2, 28, 2 >,
      0.2
   }
   cylinder {
      < -2, 32, -2 >,
      < -2, 32, 2 >,
      0.35
   }
   cylinder {
      <  2, 32, -2 >,
      <  2, 32, 2 >,
      0.35
   }
   cylinder {
      < -2, 32, 2 >,
      <  2, 32, 2 >,
      0.35
   }
   cylinder {
      < -2, 32, -2 >,
      <  2, 32, -2 >,
      0.35
   }
   cylinder {
      < -2, 32, -2 >,
      < -2, 36, 2 >,
      0.2
   }
   cylinder {
      < 2, 32, -2 >,
      < 2, 36, 2 >,
      0.2
   }
   cylinder {
      < -2, 36, -2 >,
      <  2, 32, -2 >,
      0.2
   }
   cylinder {
      < -2, 36, 2 >,
      <  2, 32, 2 >,
      0.2
   }
   cylinder {
      < -2, 36, -2 >,
      < -2, 36, 2 >,
      0.35
   }
   cylinder {
      <  2, 36, -2 >,
      <  2, 36, 2 >,
      0.35
   }
   cylinder {
      < -2, 36, 2 >,
      <  2, 36, 2 >,
      0.35
   }
   cylinder {
      < -2, 36, -2 >,
      <  2, 36, -2 >,
      0.35
   }
   cylinder {
      < -2, 36, -2 >,
      < -2, 40, 2 >,
      0.2
   }
   cylinder {
      < 2, 36, -2 >,
      < 2, 40, 2 >,
      0.2
   }
   cylinder {
      < -2, 40, -2 >,
      <  2, 36, -2 >,
      0.2
   }
   cylinder {
      < -2, 40, 2 >,
      <  2, 36, 2 >,
      0.2
   }
   cylinder {
      < -2, 40, -2 >,
      < -2, 40, 2 >,
      0.35
   }
   cylinder {
      <  2, 40, -2 >,
      <  2, 40, 2 >,
      0.35
   }
   cylinder {
      < -2, 40, 2 >,
      <  2, 40, 2 >,
      0.35
   }
   cylinder {
      < -2, 40, -2 >,
      <  2, 40, -2 >,
      0.35
   }
   cylinder {
      < -2, 40, -2 >,
      < -2, 44, 2 >,
      0.2
   }
   cylinder {
      < 2, 40, -2 >,
      < 2, 44, 2 >,
      0.2
   }
   cylinder {
      < -2, 44, -2 >,
      <  2, 40, -2 >,
      0.2
   }
   cylinder {
      < -2, 44, 2 >,
      <  2, 40, 2 >,
      0.2
   }
   cylinder {
      < -2, 44, -2 >,
      < -2, 44, 2 >,
      0.35
   }
   cylinder {
      <  2, 44, -2 >,
      <  2, 44, 2 >,
      0.35
   }
   cylinder {
      < -2, 44, 2 >,
      <  2, 44, 2 >,
      0.35
   }
   cylinder {
      < -2, 44, -2 >,
      <  2, 44, -2 >,
      0.35
   }
   cylinder {
      < -2, 44, -2 >,
      < -2, 48, 2 >,
      0.2
   }
   cylinder {
      < 2, 44, -2 >,
      < 2, 48, 2 >,
      0.2
   }
   cylinder {
      < -2, 48, -2 >,
      <  2, 44, -2 >,
      0.2
   }
   cylinder {
      < -2, 48, 2 >,
      <  2, 44, 2 >,
      0.2
   }
   cylinder {
      < -2, 48, -2 >,
      < -2, 48, 2 >,
      0.35
   }
   cylinder {
      <  2, 48, -2 >,
      <  2, 48, 2 >,
      0.35
   }
   cylinder {
      < -2, 48, 2 >,
      <  2, 48, 2 >,
      0.35
   }
   cylinder {
      < -2, 48, -2 >,
      <  2, 48, -2 >,
      0.35
   }
   cylinder {
      < -2, 48, -2 >,
      < -2, 52, 2 >,
      0.2
   }
   cylinder {
      < 2, 48, -2 >,
      < 2, 52, 2 >,
      0.2
   }
   cylinder {
      < -2, 52, -2 >,
      <  2, 48, -2 >,
      0.2
   }
   cylinder {
      < -2, 52, 2 >,
      <  2, 48, 2 >,
      0.2
   }
   cylinder {
      < -2, 52, -2 >,
      < -2, 52, 2 >,
      0.35
   }
   cylinder {
      <  2, 52, -2 >,
      <  2, 52, 2 >,
      0.35
   }
   cylinder {
      < -2, 52, 2 >,
      <  2, 52, 2 >,
      0.35
   }
   cylinder {
      < -2, 52, -2 >,
      <  2, 52, -2 >,
      0.35
   }
   cylinder {
      < -2, 52, -2 >,
      < -2, 56, 2 >,
      0.2
   }
   cylinder {
      < 2, 52, -2 >,
      < 2, 56, 2 >,
      0.2
   }
   cylinder {
      < -2, 56, -2 >,
      <  2, 52, -2 >,
      0.2
   }
   cylinder {
      < -2, 56, 2 >,
      <  2, 52, 2 >,
      0.2
   }
   cylinder {
      < -2, 56, -2 >,
      < -2, 56, 2 >,
      0.35
   }
   cylinder {
      <  2, 56, -2 >,
      <  2, 56, 2 >,
      0.35
   }
   cylinder {
      < -2, 56, 2 >,
      <  2, 56, 2 >,
      0.35
   }
   cylinder {
      < -2, 56, -2 >,
      <  2, 56, -2 >,
      0.35
   }
   cylinder {
      < -2, 56, -2 >,
      < -2, 60, 2 >,
      0.2
   }
   cylinder {
      < 2, 56, -2 >,
      < 2, 60, 2 >,
      0.2
   }
   cylinder {
      < -2, 60, -2 >,
      <  2, 56, -2 >,
      0.2
   }
   cylinder {
      < -2, 60, 2 >,
      <  2, 56, 2 >,
      0.2
   }
   cylinder {
      < -2, 60, -2 >,
      < -2, 60, 2 >,
      0.35
   }
   cylinder {
      <  2, 60, -2 >,
      <  2, 60, 2 >,
      0.35
   }
   cylinder {
      < -2, 60, 2 >,
      <  2, 60, 2 >,
      0.35
   }
   cylinder {
      < -2, 60, -2 >,
      <  2, 60, -2 >,
      0.35
   }
   cylinder {
      < -2, 60, -2 >,
      < -2, 64, 2 >,
      0.2
   }
   cylinder {
      < 2, 60, -2 >,
      < 2, 64, 2 >,
      0.2
   }
   cylinder {
      < -2, 64, -2 >,
      <  2, 60, -2 >,
      0.2
   }
   cylinder {
      < -2, 64, 2 >,
      <  2, 60, 2 >,
      0.2
   }
   cylinder {
      < -2, 64, -2 >,
      < -2, 64, 2 >,
      0.35
   }
   cylinder {
      <  2, 64, -2 >,
      <  2, 64, 2 >,
      0.35
   }
   cylinder {
      < -2, 64, 2 >,
      <  2, 64, 2 >,
      0.35
   }
   cylinder {
      < -2, 64, -2 >,
      <  2, 64, -2 >,
      0.35
   }
   cylinder {
      < -2, 64, -2 >,
      < -2, 68, 2 >,
      0.2
   }
   cylinder {
      < 2, 64, -2 >,
      < 2, 68, 2 >,
      0.2
   }
   cylinder {
      < -2, 68, -2 >,
      <  2, 64, -2 >,
      0.2
   }
   cylinder {
      < -2, 68, 2 >,
      <  2, 64, 2 >,
      0.2
   }
   cylinder {
      < -2, 68, -2 >,
      < -2, 68, 2 >,
      0.35
   }
   cylinder {
      <  2, 68, -2 >,
      <  2, 68, 2 >,
      0.35
   }
   cylinder {
      < -2, 68, 2 >,
      <  2, 68, 2 >,
      0.35
   }
   cylinder {
      < -2, 68, -2 >,
      <  2, 68, -2 >,
      0.35
   }
   cylinder {
      < -2, 68, -2 >,
      < -2, 72, 2 >,
      0.2
   }
   cylinder {
      < 2, 68, -2 >,
      < 2, 72, 2 >,
      0.2
   }
   cylinder {
      < -2, 72, -2 >,
      <  2, 68, -2 >,
      0.2
   }
   cylinder {
      < -2, 72, 2 >,
      <  2, 68, 2 >,
      0.2
   }
   cylinder {
      < -2, 72, -2 >,
      < -2, 72, 2 >,
      0.35
   }
   cylinder {
      <  2, 72, -2 >,
      <  2, 72, 2 >,
      0.35
   }
   cylinder {
      < -2, 72, 2 >,
      <  2, 72, 2 >,
      0.35
   }
   cylinder {
      < -2, 72, -2 >,
      <  2, 72, -2 >,
      0.35
   }
   cylinder {
      < -2, 72, -2 >,
      < -2, 76, 2 >,
      0.2
   }
   cylinder {
      < 2, 72, -2 >,
      < 2, 76, 2 >,
      0.2
   }
   cylinder {
      < -2, 76, -2 >,
      <  2, 72, -2 >,
      0.2
   }
   cylinder {
      < -2, 76, 2 >,
      <  2, 72, 2 >,
      0.2
   }
   cylinder {
      < -2, 76, -2 >,
      < -2, 76, 2 >,
      0.35
   }
   cylinder {
      <  2, 76, -2 >,
      <  2, 76, 2 >,
      0.35
   }
   cylinder {
      < -2, 76, 2 >,
      <  2, 76, 2 >,
      0.35
   }
   cylinder {
      < -2, 76, -2 >,
      <  2, 76, -2 >,
      0.35
   }
   cylinder {
      < -2, 76, -2 >,
      < -2, 80, 2 >,
      0.2
   }
   cylinder {
      < 2, 76, -2 >,
      < 2, 80, 2 >,
      0.2
   }
   cylinder {
      < -2, 80, -2 >,
      <  2, 76, -2 >,
      0.2
   }
   cylinder {
      < -2, 80, 2 >,
      <  2, 76, 2 >,
      0.2
   }
   cylinder {
      < -2, 80, -2 >,
      < -2, 80, 2 >,
      0.35
   }
   cylinder {
      <  2, 80, -2 >,
      <  2, 80, 2 >,
      0.35
   }
   cylinder {
      < -2, 80, 2 >,
      <  2, 80, 2 >,
      0.35
   }
   cylinder {
      < -2, 80, -2 >,
      <  2, 80, -2 >,
      0.35
   }
}

#declare Speaker_Box = union {
   box {
      < 0, -2.5, -2.5 >,
      < 4.1,  2.5, 0 >
      rotate < 0, -10, 0 >
   }
   box {
      < -4.1, -2.5, -2.5 >,
      <  0,  2.5, 0 >
      rotate < 0, 10, 0 >
   }
}

#declare displaySpotLight = true;
#declare spotLightIntensity = 1;
#declare ambientLightIntensity = 1;

#declare numSpkLights = 36;
#declare nOffset = 1;
#declare iPower = 0.025;
#declare iColor = 0.05;

#declare spkTowerLightAngles = array[numSpkLights];
#declare spkTowerDirections = array[numSpkLights];
#declare spkTowerRColor = array[numSpkLights];
#declare spkTowerRFade = array[numSpkLights];

#declare spkTowerGColor = array[numSpkLights];
#declare spkTowerGFade = array[numSpkLights];

#declare spkTowerBColor = array[numSpkLights];
#declare spkTowerBFade = array[numSpkLights];

#declare spkTowerLightPower = array[numSpkLights];
#declare spkTowerLightFade = array[numSpkLights];
#declare spkTowerTiltAngle = array[numSpkLights];

#declare ranGen = seed(360);

#declare counter = 0;
#while (counter < numSpkLights)
    #declare spkTowerLightAngles[counter] = (rand(ranGen) * 90) - 45;
    #if (spkTowerLightAngles[counter] < 0)
        #declare spkTowerDirections[counter] = false;
    #else
        #declare spkTowerDirections[counter] = true;
    #end

    #declare spkTowerLightPower[counter] = (rand(ranGen) * 0.5);
    #if (spkTowerLightPower[counter] < 0.125)
        #declare spkTowerLightFade[counter] = true;
    #else
        #declare spkTowerLightFade[counter] = false;
    #end
    
    #declare spkTowerRColor[counter] = rand(ranGen);
    #if (spkTowerRColor[counter] > 0.5)
        #declare spkTowerRFade[counter] = true;
    #else
        #declare spkTowerRFade[counter] = false;
    #end    

    #declare spkTowerGColor[counter] = rand(ranGen);
    #if (spkTowerGColor[counter] > 0.5)
        #declare spkTowerGFade[counter] = true;
    #else
        #declare spkTowerGFade[counter] = false;
    #end    

    #declare spkTowerBColor[counter] = rand(ranGen);
    #if (spkTowerBColor[counter] > 0.5)
        #declare spkTowerBFade[counter] = true;
    #else
        #declare spkTowerBFade[counter] = false;
    #end    
    
    #declare spkTowerTiltAngle[counter] = rand(ranGen) * 55;
    // #declare spkTowerTiltAngle[counter] = 0;
    #declare counter = counter + 1;
#end

#if (clock_on=1)
    #declare FN = frame_number;

    // Increment the lights to the new position
    #declare loopCounter = 0;
    #while (loopCounter < FN)
        #declare lightCounter = 0;
        #while (lightCounter < numSpkLights)
            #if (spkTowerDirections[lightCounter] = true)
                #declare spkTowerLightAngles[lightCounter] = spkTowerLightAngles[lightCounter] + nOffset;
                #if (spkTowerLightAngles[lightCounter] >= 45)
                    #declare spkTowerDirections[lightCounter] = false;
                #end
            #else
                #declare spkTowerLightAngles[lightCounter] = spkTowerLightAngles[lightCounter] - nOffset;
                #if (spkTowerLightAngles[lightCounter] <= -45)
                    #declare spkTowerDirections[lightCounter] = true;
                #end
            #end

            #if (spkTowerLightFade[lightCounter] = true)
                #declare spkTowerLightPower[lightCounter] = spkTowerLightPower[lightCounter] + iPower;
                #if (spkTowerLightPower[lightCounter] > 0.25)
                    #declare spkTowerLightFade[lightCounter] = false;
                #end
            #else
                #declare spkTowerLightPower[lightCounter] = spkTowerLightPower[lightCounter] - iPower;
                #if (spkTowerLightPower[lightCounter] < 0)
                    #declare spkTowerLightFade[lightCounter] = true;
                #end
            #end

            #if (spkTowerRFade[lightCounter] = true)
                #declare spkTowerRColor[lightCounter] = spkTowerRColor[lightCounter] + iColor;
                #if (spkTowerRColor[lightCounter] > 1.0)
                    #declare spkTowerRFade[lightCounter] = false;
                #end
            #else
                #declare spkTowerRColor[lightCounter] = spkTowerRColor[lightCounter] - iColor;
                #if (spkTowerRColor[lightCounter] < 0)
                    #declare spkTowerRFade[lightCounter] = true;
                #end
            #end

            #if (spkTowerGFade[lightCounter] = true)
                #declare spkTowerGColor[lightCounter] = spkTowerGColor[lightCounter] + iColor;
                #if (spkTowerGColor[lightCounter] > 1.0)
                    #declare spkTowerGFade[lightCounter] = false;
                #end
            #else
                #declare spkTowerGColor[lightCounter] = spkTowerGColor[lightCounter] - iColor;
                #if (spkTowerGColor[lightCounter] < 0)
                    #declare spkTowerGFade[lightCounter] = true;
                #end
            #end

            #if (spkTowerBFade[lightCounter] = true)
                #declare spkTowerBColor[lightCounter] = spkTowerBColor[lightCounter] + iColor;
                #if (spkTowerBColor[lightCounter] > 1.0)
                    #declare spkTowerBFade[lightCounter] = false;
                #end
            #else
                #declare spkTowerBColor[lightCounter] = spkTowerBColor[lightCounter] - iColor;
                #if (spkTowerBColor[lightCounter] < 0)
                    #declare spkTowerBFade[lightCounter] = true;
                #end
            #end

            #declare lightCounter = lightCounter + 1;        
        #end    
        #declare loopCounter = loopCounter + 1;
    #end
#end

#declare Speaker_Offset = -160;

#declare Speaker_Rack = union {
   object {
      Speaker_Box
      translate < 0, 60, -2 >
   }
   object {
      Speaker_Box
      translate < 0, 54.5, -2 >
   }
   object {
      Speaker_Box
      translate < 0, 49, -2 >
   }
   texture {
      pigment { color red 0.22 green 0.22 blue 0.22 }
   }
}

#macro GenSpeakerTowerLight(lightNum)
union {
   cylinder {
      < 0, 0, 0 >,
      < 0, 0, 3 >,
      0.5
      texture {
         pigment { color red 0.2 green 0.2 blue 0.2 }
         finish {
            metallic
            ambient 0.5
            diffuse 0.4
         }
      }
   }
   sphere {
      < 0, 0, 0 >, 0.45
      scale < 1, 1, 0.4 >
      texture {
         pigment { color rgb < spkTowerRColor[lightNum], spkTowerGColor[lightNum], spkTowerBColor[lightNum] > }
         finish {
            ambient 1.0
            diffuse 0.0
         }
      }
      translate < 0, 0, 3 >
   }
   #if (displaySpotLight = true)
   object {
      light_source {
         < 0, 0, 3.5 >
         color rgb < spkTowerRColor[lightNum], spkTowerGColor[lightNum], spkTowerBColor[lightNum] > * (spkTowerLightPower[lightNum] * 1.0)
         spotlight
         point_at < 0, 0, 10 >
         radius 10
         falloff 3
         tightness 2
         // atmospheric_attenuation on
      }
   }
   #end
}
#end
/*
#declare Speaker_Tower_Light = union {
   cylinder {
      < 0, 0, 0 >,
      < 0, 0, 3 >,
      0.5
      texture {
         pigment { color red 0.2 green 0.2 blue 0.2 }
         finish {
            metallic
            ambient 0.5
            diffuse 0.4
         }
      }
   }
   sphere {
      < 0, 0, 0 >, 0.45
      scale < 1, 1, 0.4 >
      texture {
         pigment { color red 1.0 green 1.0 blue 1.0 }
         finish {
            ambient 1.0
            diffuse 0.0
         }
      }
      translate < 0, 0, 3 >
   }
   #if (displaySpotLight = true)
   object {
      light_source {
         < 0, 0, 3.5 >
         color rgb < 1, 1, 1 > * spotLightIntensity
         spotlight
         point_at < 0, 0, 10 >
         radius 20
         falloff 3
         tightness 2
         // atmospheric_attenuation on
      }
   }
   #end
}
*/
union {
   object {
      Speaker_Tower
      texture {
         pigment { color red 0.2 green 0.2 blue 0.2 }
         finish { metallic }
      }
   }
   object {
      Speaker_Rack
      translate < 0, 5, 0 >
   }
   object {
      GenSpeakerTowerLight(0)
      rotate < spkTowerTiltAngle[0], 0, 0 >
      rotate < 0, spkTowerLightAngles[0], 0 >
      translate < 0, 70, 0 >
   }
   object {
      GenSpeakerTowerLight(1)
      rotate < spkTowerTiltAngle[1], 0, 0 >
      rotate < 0, spkTowerLightAngles[1], 0 >
      translate < 0, 65, 0 >
   }
   object {
      GenSpeakerTowerLight(2)
      rotate < spkTowerTiltAngle[2], 0, 0 >
      rotate < 0, spkTowerLightAngles[2], 0 >
      translate < 0, 60, 0 >
   }

   object {
      GenSpeakerTowerLight(3)
      rotate < spkTowerTiltAngle[3], 0, 0 >
      rotate < 0, spkTowerLightAngles[3], 0 >
      translate < 0, 50, 0 >
   }
   object {
      GenSpeakerTowerLight(4)
      rotate < spkTowerTiltAngle[4], 0, 0 >
      rotate < 0, spkTowerLightAngles[4], 0 >
      translate < 0, 45, 0 >
   }
   object {
      GenSpeakerTowerLight(5)
      rotate < spkTowerTiltAngle[5], 0, 0 >
      rotate < 0, spkTowerLightAngles[5], 0 >
      translate < 0, 40, 0 >
   }

   object {
      GenSpeakerTowerLight(6)
      rotate < spkTowerTiltAngle[6], 0, 0 >
      rotate < 0, 180, 0 >
      rotate < 0, spkTowerLightAngles[6], 0 >
      translate < 0, 50, 0 >
   }
   object {
      GenSpeakerTowerLight(7)
      rotate < spkTowerTiltAngle[7], 0, 0 >
      rotate < 0, 180, 0 >
      rotate < 0, spkTowerLightAngles[7], 0 >
      translate < 0, 45, 0 >
   }
   object {
      GenSpeakerTowerLight(8)
      rotate < spkTowerTiltAngle[8], 0, 0 >
      rotate < 0, 180, 0 >
      rotate < 0, spkTowerLightAngles[8], 0 >
      translate < 0, 40, 0 >
   }

   translate < 0, 0, Speaker_Offset >
   rotate < 0, 10, 0 >
   rotate < 0, -90, 0 >
   translate < -StadiumCenter, PodHeight, 0 >
}

union {
   object {
      Speaker_Tower
      texture {
         pigment { color red 0.2 green 0.2 blue 0.2 }
         finish { metallic }
      }
   }
   object {
      Speaker_Rack
      translate < 0, 5, 0 >
   }
   object {
      GenSpeakerTowerLight(9)
      rotate < spkTowerTiltAngle[9], 0, 0 >
      rotate < 0, spkTowerLightAngles[9], 0 >
      translate < 0, 70, 0 >
   }
   object {
      GenSpeakerTowerLight(10)
      rotate < spkTowerTiltAngle[10], 0, 0 >
      rotate < 0, spkTowerLightAngles[10], 0 >
      translate < 0, 65, 0 >
   }
   object {
      GenSpeakerTowerLight(11)
      rotate < spkTowerTiltAngle[11], 0, 0 >
      rotate < 0, spkTowerLightAngles[11], 0 >
      translate < 0, 60, 0 >
   }

   object {
      GenSpeakerTowerLight(12)
      rotate < spkTowerTiltAngle[12], 0, 0 >
      rotate < 0, spkTowerLightAngles[12], 0 >
      translate < 0, 50, 0 >
   }
   object {
      GenSpeakerTowerLight(13)
      rotate < spkTowerTiltAngle[13], 0, 0 >
      rotate < 0, spkTowerLightAngles[13], 0 >
      translate < 0, 45, 0 >
   }
   object {
      GenSpeakerTowerLight(14)
      rotate < spkTowerTiltAngle[14], 0, 0 >
      rotate < 0, spkTowerLightAngles[14], 0 >
      translate < 0, 40, 0 >
   }

   object {
      GenSpeakerTowerLight(15)
      rotate < spkTowerTiltAngle[15], 0, 0 >
      rotate < 0, 180, 0 >
      rotate < 0, spkTowerLightAngles[15], 0 >
      translate < 0, 50, 0 >
   }
   object {
      GenSpeakerTowerLight(16)
      rotate < spkTowerTiltAngle[16], 0, 0 >
      rotate < 0, 180, 0 >
      rotate < 0, spkTowerLightAngles[16], 0 >
      translate < 0, 45, 0 >
   }
   object {
      GenSpeakerTowerLight(17)
      rotate < spkTowerTiltAngle[17], 0, 0 >
      rotate < 0, 180, 0 >
      rotate < 0, spkTowerLightAngles[17], 0 >
      translate < 0, 40, 0 >
   }

   translate < 0, 0, Speaker_Offset >
   rotate < 0, 30, 0 >
   rotate < 0, -90, 0 >
   translate < -StadiumCenter, PodHeight, 0 >
}

union {
   object {
      Speaker_Tower
      texture {
         pigment { color red 0.2 green 0.2 blue 0.2 }
         finish { metallic }
      }
   }
   object {
      Speaker_Rack
      translate < 0, 5, 0 >
   }
   object {
      GenSpeakerTowerLight(18)
      rotate < spkTowerTiltAngle[18], 0, 0 >
      rotate < 0, spkTowerLightAngles[18], 0 >
      translate < 0, 70, 0 >
   }
   object {
      GenSpeakerTowerLight(19)
      rotate < spkTowerTiltAngle[19], 0, 0 >
      rotate < 0, spkTowerLightAngles[19], 0 >
      translate < 0, 65, 0 >
   }
   object {
      GenSpeakerTowerLight(20)
      rotate < spkTowerTiltAngle[20], 0, 0 >
      rotate < 0, spkTowerLightAngles[20], 0 >
      translate < 0, 60, 0 >
   }

   object {
      GenSpeakerTowerLight(21)
      rotate < spkTowerTiltAngle[21], 0, 0 >
      rotate < 0, spkTowerLightAngles[21], 0 >
      translate < 0, 50, 0 >
   }
   object {
      GenSpeakerTowerLight(22)
      rotate < spkTowerTiltAngle[22], 0, 0 >
      rotate < 0, spkTowerLightAngles[22], 0 >
      translate < 0, 45, 0 >
   }
   object {
      GenSpeakerTowerLight(23)
      rotate < spkTowerTiltAngle[23], 0, 0 >
      rotate < 0, spkTowerLightAngles[23], 0 >
      translate < 0, 40, 0 >
   }

   object {
      GenSpeakerTowerLight(24)
      rotate < spkTowerTiltAngle[24], 0, 0 >
      rotate < 0, 180, 0 >
      rotate < 0, spkTowerLightAngles[24], 0 >
      translate < 0, 50, 0 >
   }
   object {
      GenSpeakerTowerLight(25)
      rotate < spkTowerTiltAngle[25], 0, 0 >
      rotate < 0, 180, 0 >
      rotate < 0, spkTowerLightAngles[25], 0 >
      translate < 0, 45, 0 >
   }
   object {
      GenSpeakerTowerLight(26)
      rotate < spkTowerTiltAngle[26], 0, 0 >
      rotate < 0, 180, 0 >
      rotate < 0, spkTowerLightAngles[26], 0 >
      translate < 0, 40, 0 >
   }

   translate < 0, 0, Speaker_Offset >
   rotate < 0, -10, 0 >
   rotate < 0, -90, 0 >
   translate < -StadiumCenter, PodHeight, 0 >
}

union {
   object {
      Speaker_Tower
      texture {
         pigment { color red 0.2 green 0.2 blue 0.2 }
         finish { metallic }
      }
   }
   object {
      Speaker_Rack
      translate < 0, 5, 0 >
   }
   object {
      GenSpeakerTowerLight(27)
      rotate < spkTowerTiltAngle[27], 0, 0 >
      rotate < 0, spkTowerLightAngles[27], 0 >
      translate < 0, 70, 0 >
   }
   object {
      GenSpeakerTowerLight(28)
      rotate < spkTowerTiltAngle[28], 0, 0 >
      rotate < 0, spkTowerLightAngles[28], 0 >
      translate < 0, 65, 0 >
   }
   object {
      GenSpeakerTowerLight(29)
      rotate < spkTowerTiltAngle[29], 0, 0 >
      rotate < 0, spkTowerLightAngles[29], 0 >
      translate < 0, 60, 0 >
   }

   object {
      GenSpeakerTowerLight(30)
      rotate < spkTowerTiltAngle[30], 0, 0 >
      rotate < 0, spkTowerLightAngles[30], 0 >
      translate < 0, 50, 0 >
   }
   object {
      GenSpeakerTowerLight(31)
      rotate < spkTowerTiltAngle[31], 0, 0 >
      rotate < 0, spkTowerLightAngles[31], 0 >
      translate < 0, 45, 0 >
   }
   object {
      GenSpeakerTowerLight(32)
      rotate < spkTowerTiltAngle[32], 0, 0 >
      rotate < 0, spkTowerLightAngles[32], 0 >
      translate < 0, 40, 0 >
   }

   object {
      GenSpeakerTowerLight(33)
      rotate < spkTowerTiltAngle[33], 0, 0 >
      rotate < 0, 180, 0 >
      rotate < 0, spkTowerLightAngles[33], 0 >
      translate < 0, 50, 0 >
   }
   object {
      GenSpeakerTowerLight(34)
      rotate < spkTowerTiltAngle[34], 0, 0 >
      rotate < 0, 180, 0 >
      rotate < 0, spkTowerLightAngles[34], 0 >
      translate < 0, 45, 0 >
   }
   object {
      GenSpeakerTowerLight(35)
      rotate < spkTowerTiltAngle[35], 0, 0 >
      rotate < 0, 180, 0 >
      rotate < 0, spkTowerLightAngles[35], 0 >
      translate < 0, 40, 0 >
   }

   translate < 0, 0, Speaker_Offset >
   rotate < 0, -30, 0 >
   rotate < 0, -90, 0 >
   translate < -StadiumCenter, PodHeight, 0 >
}
